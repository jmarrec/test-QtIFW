name: C++ CI Windows

on:
  push:
    branches: [ main ]
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup QtIFW 4.x
      uses: jmarrec/setup-qtifw@v1
      with:
        qtifw-version: '4.x'

    - name: Install deps
      shell: bash
      run: |
        mkdir build

        echo "Using chocolatey to install ninja"
        choco install ninja

        # C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise
        MSVC_DIR=$(cmd.exe /c "vswhere -products * -requires Microsoft.Component.MSBuild -property installationPath -latest")
        echo "Latest is: $MSVC_DIR"
        echo "MSVC_DIR=$MSVC_DIR" >> $GITHUB_ENV
        # add folder containing vcvarsall.bat
        echo "$MSVC_DIR\VC\Auxiliary\Build" >> $GITHUB_PATH

    - name: CMake configure & build
      working-directory: ./build
      shell: cmd
      run: |
        echo "Using vcvarsall to initialize the development environment"
        call vcvarsall.bat x64
        cmake -G Ninja -DCMAKE_BUILD_TYPE:STRING=Release -DCPACK_BINARY_IFW:BOOL=ON -DCPACK_BINARY_NSIS:BOOL=OFF ../
        ninja

    - name: Build package
      working-directory: ./build
      shell: bash
      run: |
        set -x
        ninja package

    - name: Upload Binary installer to release
      if: contains(github.ref, 'refs/tags')
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: build/_CPack_Packages/win64/IFW/*.exe
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true
